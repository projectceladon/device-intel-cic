From 13aac72bf2c6e1fd0924c6cf00fa4b5b9544499f Mon Sep 17 00:00:00 2001
From: Kaushal Billore <kaushal.billore@intel.com>
Date: Tue, 14 Jan 2020 23:22:41 +0530
Subject: [PATCH] [Patch] Graceful exit when NO uvcvideo node present

Signed-off-by: Kaushal Billore <kaushal.billore@intel.com>
Signed-off-by: Nikumbh, Mayur NimbaX <mayur.nimbax.nikumbh@intel.com>
---
 src/com/android/camera/CameraActivity.java     |  2 +-
 src/com/android/camera/util/QuickActivity.java | 37 +++++++++++++++++++++-----
 2 files changed, 31 insertions(+), 8 deletions(-)

diff --git a/src/com/android/camera/CameraActivity.java b/src/com/android/camera/CameraActivity.java
index 3eceb8f..bdd82fa 100644
--- a/src/com/android/camera/CameraActivity.java
+++ b/src/com/android/camera/CameraActivity.java
@@ -317,7 +317,7 @@ public class CameraActivity extends QuickActivity
     /**
      * Whether the screen is kept turned on.
      */
-    private boolean mKeepScreenOn;
+    private boolean mKeepScreenOn=true;
     private int mLastLayoutOrientation;
     private final CameraAppUI.BottomPanel.Listener mMyFilmstripBottomControlListener =
             new CameraAppUI.BottomPanel.Listener() {
diff --git a/src/com/android/camera/util/QuickActivity.java b/src/com/android/camera/util/QuickActivity.java
index 18ea253..e4aefa1 100644
--- a/src/com/android/camera/util/QuickActivity.java
+++ b/src/com/android/camera/util/QuickActivity.java
@@ -25,6 +25,9 @@ import android.os.SystemClock;
 
 import com.android.camera.debug.Log;
 import javax.annotation.Nullable;
+import android.hardware.Camera;
+import com.android.camera.FatalErrorHandler;
+import com.android.camera.FatalErrorHandlerImpl;
 
 /**
  * Workaround for lockscreen double-onResume() bug:
@@ -64,6 +67,8 @@ public abstract class QuickActivity extends Activity {
     /** A reference to the main handler on which to run lifecycle methods. */
     private Handler mMainHandler;
 
+    private FatalErrorHandler mFatalErrorHandler;
+    private int numberOfCameras;
     /**
      * True if onResume tasks have been skipped, and made false again once they
      * are executed within the onResume() method or from a delayed Runnable.
@@ -100,7 +105,9 @@ public abstract class QuickActivity extends Activity {
         Log.v(TAG, "Intent Action = " + intent.getAction());
         setIntent(intent);
         super.onNewIntent(intent);
-        onNewIntentTasks(intent);
+	if (numberOfCameras != 0) {
+		onNewIntentTasks(intent);
+	}
         logLifecycle("onNewIntent", false);
     }
 
@@ -111,14 +118,22 @@ public abstract class QuickActivity extends Activity {
         mStartupOnCreate = true;
         super.onCreate(bundle);
         mMainHandler = new Handler(getMainLooper());
-        onCreateTasks(bundle);
+	mFatalErrorHandler = new FatalErrorHandlerImpl(this);
+	numberOfCameras = Camera.getNumberOfCameras();
+	if (numberOfCameras != 0) {
+	    onCreateTasks(bundle);
+	} else {
+	    mFatalErrorHandler.onCameraOpenFailure();
+	}
         logLifecycle("onCreate", false);
     }
 
     @Override
     protected final void onStart() {
         logLifecycle("onStart", true);
-        onStartTasks();
+	if (numberOfCameras != 0){
+	    onStartTasks();
+	}
         super.onStart();
         logLifecycle("onStart", false);
     }
@@ -149,7 +164,9 @@ public abstract class QuickActivity extends Activity {
             Log.v(TAG, "onResume --> onResumeTasks()");
             // Doing the tasks, can set to false.
             mSkippedFirstOnResume = false;
-            onResumeTasks();
+            if (numberOfCameras != 0) {
+		onResumeTasks();
+            }
         }
         super.onResume();
         logLifecycle("onResume", false);
@@ -165,7 +182,9 @@ public abstract class QuickActivity extends Activity {
         // adhere to lifecycle state machine.
         if (mSkippedFirstOnResume == false) {
             Log.v(TAG, "onPause --> onPauseTasks()");
-            onPauseTasks();
+		if (numberOfCameras != 0) {
+			onPauseTasks();
+		}
         }
         super.onPause();
         mStartupOnCreate = false;
@@ -178,7 +197,9 @@ public abstract class QuickActivity extends Activity {
             Log.v(TAG, "changing configurations");
         }
         logLifecycle("onStop", true);
-        onStopTasks();
+	if (numberOfCameras != 0) {
+		onStopTasks();
+	}
         super.onStop();
         logLifecycle("onStop", false);
     }
@@ -194,7 +215,9 @@ public abstract class QuickActivity extends Activity {
     @Override
     protected final void onDestroy() {
         logLifecycle("onDestroy", true);
-        onDestroyTasks();
+	if (numberOfCameras != 0){
+		onDestroyTasks();
+	}
         super.onDestroy();
         logLifecycle("onDestroy", false);
     }
-- 
2.7.4

