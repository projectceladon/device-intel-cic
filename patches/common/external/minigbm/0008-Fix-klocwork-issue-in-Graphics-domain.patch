From dbee546d91e8f541b28942e5e90d801dc083fb1d Mon Sep 17 00:00:00 2001
From: "Yuanzhe, Liu" <yuanzhe.liu@intel.com>
Date: Thu, 21 Nov 2019 15:35:49 +0800
Subject: [PATCH] Fix klocwork issue in Graphics domain

Change-Id: Ic19d2df06abdb6a6d801dec0eb8738ccc72ace56
Tracked-On:
Signed-off-by: Yuanzhe Liu <yuanzhe.liu@intel.com>
---
 cros_gralloc/gralloc1/cros_gralloc1_module.cc | 2 ++
 drv.c                                         | 8 ++++++++
 2 files changed, 10 insertions(+)

diff --git a/cros_gralloc/gralloc1/cros_gralloc1_module.cc b/cros_gralloc/gralloc1/cros_gralloc1_module.cc
index afbaa400a227..0eb406144769 100755
--- a/cros_gralloc/gralloc1/cros_gralloc1_module.cc
+++ b/cros_gralloc/gralloc1/cros_gralloc1_module.cc
@@ -1040,11 +1040,13 @@ int CrosGralloc1::HookDevOpen(const struct hw_module_t *mod, const char *name,
             }
             else {
                 ALOGE("Failed to initialize CrosGralloc1. \n");
+                delete pGralloc1;
                 ret = -EINVAL;                
             }
         }
         else {
     		ALOGE("Failed to allocate CrosGralloc1");
+    		delete pGralloc1;
     		ret = -ENOMEM;          
         }
 
diff --git a/drv.c b/drv.c
index 903ac6a05d42..c98170dbd0cf 100755
--- a/drv.c
+++ b/drv.c
@@ -795,6 +795,8 @@ static drmModeModeInfoPtr generate_mode(int h_pixels, int v_lines, float freq)
     int margins = 0;
 
     drmModeModeInfoPtr m = malloc(sizeof(drmModeModeInfo));
+    if(m == NULL)
+        return NULL;
 
     h_pixels_rnd = rint((float) h_pixels / CELL_GRAN) * CELL_GRAN;
     v_lines_rnd = interlaced ? rint((float) v_lines) / 2.0 : rint((float) v_lines);
@@ -991,6 +993,8 @@ static int kms_init_with_connector(kms_t* kms, kms_output_t* output, drmModeConn
     ALOGI("the best mode is %s", mode->name);
 
     output->mode = *mode;
+    drmModeFreeModeInfo(mode);
+
     switch (bpp) {
     case 2:
         output->fb_format = HAL_PIXEL_FORMAT_RGB_565;
@@ -1106,6 +1110,8 @@ int drv_init_kms(struct driver* drv)
         unsigned int i, j;
         ALOGE("found %d drm planes", kms->plane_resources->count_planes);
         kms->planes = calloc(kms->plane_resources->count_planes, sizeof(drmModePlanePtr));
+        if(kms->planes == NULL)
+            return -EINVAL;
         for (i = 0; i < kms->plane_resources->count_planes; i++) {
             kms->planes[i] = drmModeGetPlane(drv->fd, kms->plane_resources->planes[i]);
         }
@@ -1230,6 +1236,7 @@ int drv_init_kms(struct driver* drv)
                     (connector->connector_type_id  == type_id) ) {
                     if (!kms_init_with_connector(kms, &kms->primary, connector)) {
                         ALOGD("first connector is the primary connector");                        
+                        drmModeFreeConnector(connector);
                         break;
                     }
                 }
@@ -1264,6 +1271,7 @@ int drv_init_kms(struct driver* drv)
             if (hdmi->connector_id == kms->primary.connector_id) {
                 /* special case: our primary connector is hdmi */
                 ALOGD("hdmi is the primary connector");
+                drmModeFreeConnector(hdmi);
                 goto skip_hdmi_modes;
             }
 
-- 
2.7.4

