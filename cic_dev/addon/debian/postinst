#!/usr/bin/env bash
# author: sundar.gnanasekaran@intel.com

export AIC_WORK_DIR=/opt/cic
cuser=`echo $HOME | cut -d'/' -f3`

function launch_early() {
  a=`grep -ir "Alias=rc-local.service" /etc/systemd/system/rc-local.service`

  if [ -z "$a" ] #if script run before -- START
  then
    echo "Adding launch-early"
    sudo ln -fs /lib/systemd/system/rc-local.service /etc/systemd/system/rc-local.service

cat << EOF | tee -a /etc/systemd/system/rc-local.service
[Install]
WantedBy=multi-user.target
Alias=rc-local.service
EOF

  fi #if script run before -- END

  rm -f /etc/rc.local
  touch /etc/rc.local

cat << 'EOF' | tee /etc/rc.local
#!/bin/sh
# start aic
while (( $(ps -ef | grep -v grep | grep dockerd | wc -l) == 0 )); do sleep 1; done
/AIC_WORK_DIR/aic start
modprobe snd-dummy
exit 0
EOF

  chmod +x /etc/rc.local

  sed -i "s|/AIC_WORK_DIR|$AIC_WORK_DIR|g" /etc/rc.local

}

function cic_systemd() {
  echo ""
  echo "*****************************************"
  echo "Adding cic.service to /lib/systemd/system"
  echo "*****************************************"
  echo ""

cat > /lib/systemd/system/cic.service << EOF
[Unit]
Description="Start/Stop CIC service"
[Service]
WorkingDirectory=/AIC_WORK_DIR/
Type=oneshot
ExecStart=/bin/bash aic start
ExecStop=/bin/bash aic stop
RemainAfterExit=yes
[Install]
WantedBy=multi-user.target
EOF

sed -i "s|/AIC_WORK_DIR|$AIC_WORK_DIR|g" /lib/systemd/system/cic.service

}

function remove_app() {
  echo ""
  echo "*********************************"
  echo "Update Doeckerfile for remove apk"
  echo "*********************************"
  echo ""

  # Note: remove Settings will cause the device can't enter launcher ui issue
  cd $AIC_WORK_DIR
  mkdir -p update/root
#Add following content into update/Dockerfile
cat >> update/Dockerfile << EOF
RUN ["/system/bin/sh", "-c", "rm -rf /system/priv-app/Contacts"]
RUN ["/system/bin/sh", "-c", "rm -rf /system/priv-app/MusicFX"]
RUN ["/system/bin/sh", "-c", "rm -rf /system/priv-app/DocumentsUI"]
RUN ["/system/bin/sh", "-c", "rm -rf /system/app/Email"]
RUN ["/system/bin/sh", "-c", "rm -rf /system/app/Calendar"]
RUN ["/system/bin/sh", "-c", "rm -rf /system/app/Music"]
RUN ["/system/bin/sh", "-c", "rm -rf /system/app/ExactCalculator"]
RUN ["/system/bin/sh", "-c", "rm -rf /system/app/QuickSearchBox"]
EOF


}


function install_cic() {
  cd $AIC_WORK_DIR
  echo ""
  echo "**************"
  echo "Installing CIC"
  echo "**************"
  echo ""

  ./aic install -u -e -d none > /dev/null
  if [ $? != "0" ]; then
    echo ""
    echo "**************************"
    echo "AIC INSTALL FAILED !!"
    echo "**************************"
    echo ""
    exit 1
  else
    echo ""
    echo "**************************"
    echo "Installed CIC Successfully"
    echo "**************************"
    echo ""
  fi

  #Check env path
  AIC_WORK_DIR_PATH=$AIC_WORK_DIR/workdir
  a=`grep -rn AIC_WORK_DIR /etc/environment`
  if [ -z "$a" ]; then
    echo "export AIC_WORK_DIR=$AIC_WORK_DIR_PATH" >> /etc/environment
  else
    sed -i "s|export AIC_WORK_DIR.*||g" /etc/environment
    echo "export AIC_WORK_DIR=$AIC_WORK_DIR_PATH" >> /etc/environment
  fi

  a=`grep -rn AIC_WORK_DIR $HOME/.bashrc`
  if [ -z "$a" ]; then
    echo "export AIC_WORK_DIR=$AIC_WORK_DIR_PATH" >> $HOME/.bashrc
  else
    sed -i "s|export AIC_WORK_DIR.*||g" $HOME/.bashrc
    echo "export AIC_WORK_DIR=$AIC_WORK_DIR_PATH" >> $HOME/.bashrc
  fi

  cp /usr/share/applications/cfc.desktop ~/Desktop/cfc.desktop
  chown $1:$1 /home/$1/Desktop/cfc.desktop
  chmod +x ~/Desktop/cfc.desktop

  chmod 777 -R /opt/cic/workdir

  systemctl enable cic

  echo ""
  echo "**********************************************"
  echo "Reboot required for changes to be reflected !!"
  echo "**********************************************"
  echo ""

}

#Install Feature set packages / modules
#setup_cfc

#Initiate Early-Launch
#launch_early

#Add cic.service
cic_systemd

#Remove un-used apks
remove_app

#Install CIC
install_cic $cuser
